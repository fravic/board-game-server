### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum ActionType {
  GameStart
  Heartbeat
  PlayerJoin
}

type ExpectedAction {
  actorId: String
  type: ActionType
}

type Game implements Node {
  expectedActions: [ExpectedAction!]!
  id: ID!
  name: String!
  numPlayers: Int!
  players: [Player!]!
}

type GameAndPlayer {
  game: Game!
  player: Player!
}

type GameEvent {
  changedNodes: [Node!]!
}

type Mutation {
  createGame(name: String): Game!
  heartbeat(gameId: ID!, playerId: ID): Game!

  """Creates a new player and adds the player to a game."""
  joinGameAsPlayer(gameId: ID!, name: String!): GameAndPlayer!
  startGame(gameId: ID!, playerId: ID!): Game!
}

interface Node {
  id: ID!
}

type Player implements Node {
  id: ID!
  isConnected: Boolean!
  name: String!
}

type Query {
  game(id: ID!): Game!
}

type Subscription {
  gameEvents(gameId: ID!): GameEvent!
}
